export default async function handler(req, res) {
  res.setHeader('Content-Type', 'application/json; charset=utf-8');

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Parse body safely
    let body = req.body;
    if (typeof body === 'string') {
      try { body = JSON.parse(body); } catch { body = {}; }
    }
    const messages = Array.isArray(body?.messages) ? body.messages : [];

    const resp = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages,
        temperature: 0.3,
      }),
    });

    // لو فيه خطأ من OpenAI رجّع النص كـ JSON
    if (!resp.ok) {
      const text = await resp.text(); // ممكن تكون مش JSON
      return res.status(resp.status).json({ error: text || 'Upstream error' });
    }

    const data = await resp.json(); // ده مؤكد JSON
    return res.status(200).json(data);

  } catch (err) {
    // مسك كل الأخطاء غير المتوقعة
    return res.status(500).json({ error: err?.message || 'Server error' });
  }
}
