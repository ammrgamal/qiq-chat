export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  // تأكيد وجود مفتاح OpenAI
  if (!process.env.OPENAI_API_KEY) {
    return res.status(500).json({ error: "Missing OPENAI_API_KEY on server" });
  }

  try {
    // في بعض بيئات Vercel الـ body بييجي string
    const body = typeof req.body === "string" ? JSON.parse(req.body) : req.body;
    const messages = Array.isArray(body?.messages) ? body.messages : [];

    const resp = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "gpt-4o-mini",
        messages,
        temperature: 0.3
      })
    });

    // لو OpenAI رجّع خطأ، رجّعه للعميل عشان يظهر في الواجهة
    const text = await resp.text();
    if (!resp.ok) {
      return res.status(resp.status).json({ error: text });
    }

    const data = JSON.parse(text);
    const content = data?.choices?.[0]?.message?.content || "No reply";
    return res.status(200).json({ choices: [{ message: { content } }] });
  } catch (e) {
    return res.status(500).jso
