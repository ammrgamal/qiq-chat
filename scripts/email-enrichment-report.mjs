#!/usr/bin/env node
// Email the enrichment report CSV as an attachment using Resend/SendGrid via api/_lib/email.js
import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';

// Resolve project root (this script sits under scripts/)
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const projectRoot = path.resolve(__dirname, '..');

dotenv.config({ path: path.join(projectRoot, '.env') });

const ARGS = Object.fromEntries(process.argv.slice(2).map(a=>{
  const [k,...rest] = a.replace(/^--/,'').split('=');
  return [k, rest.join('=') || true];
}));

const to = ARGS.to || process.env.REPORT_EMAIL_TO || process.env.QUOTE_NOTIFY_EMAIL || process.env.EMAIL_TO;
const brand = ARGS.brand || 'Kaspersky';
const list = ARGS.list || '12';
const csvPath = ARGS.file || path.join(projectRoot, `enrichment-report-${brand.toLowerCase()}-list${list}.csv`);

if (!to) {
  console.error('[email-report] Missing recipient. Provide --to or set REPORT_EMAIL_TO in env.');
  process.exit(2);
}

if (!fs.existsSync(csvPath)){
  console.error(`[email-report] Report file not found: ${csvPath}`);
  process.exit(2);
}

const subject = `Enrichment Report (${brand} - list ${list})`;
const html = `
  <div style="font-family:Arial,sans-serif;line-height:1.5">
    <h2>Enrichment Report</h2>
    <p>Brand: <strong>${brand}</strong></p>
    <p>List: <strong>${list}</strong></p>
    <p>Attached is the CSV report generated by the enrichment pipeline.</p>
  </div>
`;

const csvContent = fs.readFileSync(csvPath);
const base64 = csvContent.toString('base64');

const { sendEmail } = await import('../api/_lib/email.js');

(async function(){
  const r = await sendEmail({
    to,
    subject,
    html,
    attachments: [{ filename: path.basename(csvPath), contentBase64: base64, mimeType: 'text/csv' }]
  });
  if (!r.ok) {
    console.error('[email-report] Failed to send email', r);
    process.exit(1);
  }
  console.log(`[email-report] Email sent to ${to} with attachment ${path.basename(csvPath)}`);
})();
